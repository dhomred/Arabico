# Arabico Repository Build Script
# This script builds all provider plugins

Write-Host "üöÄ Building Arabico Repository..." -ForegroundColor Green

# Create build directory
$buildDir = "build"
if (!(Test-Path $buildDir)) {
    New-Item -ItemType Directory -Path $buildDir | Out-Null
}

# Function to build a provider
function Build-Provider {
    param(
        [string]$providerName,
        [string]$mainClass
    )
    
    Write-Host "üì¶ Building $providerName..." -ForegroundColor Yellow
    
    $providerDir = $providerName
    if (Test-Path $providerDir) {
        # Create provider build directory
        $providerBuildDir = "$providerDir/build"
        if (!(Test-Path $providerBuildDir)) {
            New-Item -ItemType Directory -Path $providerBuildDir | Out-Null
        }
        
        # Create a simple JAR file with metadata
        $manifestContent = @"
Manifest-Version: 1.0
Provider-Name: $providerName
Main-Class: $mainClass
Version: 1.0.0
Language: ar
"@
        
        $manifestFile = "$providerBuildDir/MANIFEST.MF"
        $manifestContent | Out-File -FilePath $manifestFile -Encoding ASCII
        
        # Create plugin file (simplified)
        $pluginContent = @"
// $providerName Plugin
// Generated by Arabico Build System
"@
        $pluginFile = "$providerBuildDir/plugin.kt"
        $pluginContent | Out-File -FilePath $pluginFile -Encoding UTF8
        
        # Copy to main build directory
        $targetFile = "$buildDir/$providerName.cs3"
        Copy-Item -Path $pluginFile -Destination $targetFile -Force
        
        Write-Host "‚úÖ $providerName built successfully!" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  $providerName directory not found, skipping..." -ForegroundColor Orange
    }
}

# Build all providers
$providers = @(
    @{Name="TvLive"; Class="com.arabico.providers.TvLiveProvider"},
    @{Name="3isk"; Class="com.arabico.providers.IskProvider"},
    @{Name="Braflix"; Class="com.arabico.providers.BraflixProvider"},
    @{Name="365_SHOW"; Class="com.arabico.providers.Show365Provider"},
    @{Name="SagaProvider"; Class="com.arabico.providers.SagaProvider"},
    @{Name="Cima4uProvider"; Class="com.arabico.providers.Cima4uProvider"},
    @{Name="ArabLionzProvider"; Class="com.arabico.providers.ArabLionzProvider"}
)

foreach ($provider in $providers) {
    Build-Provider -providerName $provider.Name -mainClass $provider.Class
}

# Create repository metadata
$repoMetadata = @"
{
    "name": "Arabico",
    "description": "Arabic Content Providers Repository for CloudStream",
    "version": "2.0.0",
    "buildDate": "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')",
    "providers": [
        $(($providers | ForEach-Object { '"' + $_.Name + '"' }) -join ', ')
    ]
}
"@

$repoMetadata | Out-File -FilePath "$buildDir/repo-metadata.json" -Encoding UTF8

Write-Host "üéâ Build completed successfully!" -ForegroundColor Green
Write-Host "üìÅ Plugins available in: $buildDir" -ForegroundColor Cyan